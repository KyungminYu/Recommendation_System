/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.0.M10
 * Generated at: 2016-12-05 15:49:03 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.ArrayList;
import java.util.List;
import recommend.*;
import dbHandling.*;

public final class RecommendList_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("recommend");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_packages.add("dbHandling");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
 
	String strPage = (String)request.getParameter("page");
	int PAGE = Integer.parseInt(strPage);
	
	DBHandler dbHandler = new DBHandler();
	

      out.write("\r\n");
      out.write("    <!DOCTYPE html>\r\n");
      out.write("\r\n");
      out.write("<html lang=\"en\" xmlns=\"http://www.w3.org/1999/xhtml\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"utf-8\" />\r\n");
      out.write("    <title></title><link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap.min.css\">\r\n");
      out.write("\t<style type=\"text/css\">\r\n");
      out.write("\t.text {\r\n");
      out.write("  \t\twhite-space: nowrap;\r\n");
      out.write("\t\twidth: 280px; padding: 15px;\r\n");
      out.write("\t\toverflow: hidden;\r\n");
      out.write("\t\ttext-overflow: ellipsis;\r\n");
      out.write("\t}\r\n");
      out.write("\t</style>\r\n");
      out.write("<script>\r\n");
      out.write("var tmp;\r\n");
      out.write("function setMovieCd(str){\r\n");
      out.write("\ttmp = str;\r\n");
      out.write("}\r\n");
      out.write("function Rating(){\r\n");
      out.write("\t//여기에 DB로 평점 보내는 쿼리 작성\r\n");
      out.write("\tvar rate = document.getElementById(\"RATE\").value;\r\n");
      out.write("\t//alert(rate)\r\n");
      out.write("\tlocation.replace(\"Rating.jsp?movieCd=\"+tmp+\"&rate=\"+rate+\"&dest=Recommending.jsp\"); \r\n");
      out.write("}\r\n");
      out.write("function Texting(){\r\n");
      out.write("\tvar text = document.getElementById(\"TEXT\").value;\r\n");
      out.write("\t//여기에 DB로 평점 보내는 쿼리 작성\r\n");
      out.write("\tlocation.replace(\"Texting.jsp?movieCd=\"+tmp+\"&text=\"+text+\"&dest=Recommending.jsp\"); \r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <div class=\"container\">\r\n");
      out.write("        <div>\r\n");
      out.write("            <h1>영화 리스트</h1>\r\n");
      out.write("            <div class=\"row\">\r\n");
      out.write("            ");

        	for(int i = PAGE*6; i<(PAGE+1)*6 && session.getAttribute("recommend_"+i)!=null;i++){
                String movieCd = (String)session.getAttribute("recommend_"+i);
                MovieInfo info = dbHandler.getData(movieCd);
        		out.println("<div class='col-sm-6 col-md-4'>");
        		out.println("<div class='thumbnail'>");
        		out.println("<img src='"+info.getURL()+"' alt='포스터 없음' style='max-width: auto; height: 400px;'>");
        		out.println("<div class='caption'>");
        		out.println("<h3 class='text'>"+info.getMovieName()+"</h3>");
        		out.println("<h4 class='text'>-"+info.getMovieNameEn()+"</h4>");
        		out.println("<p>장르: "+info.getGenre()+"</p>");
        		out.println("<p>국가: "+info.getNation()+"</p>");
        		out.println("<p>개봉일: "+info.getOpenYr()+"</p>");
        		out.println("<p><button type='button' class='btn btn-primary' data-toggle='modal' data-target='#RateModal2' onclick='setMovieCd("+movieCd+")'>평점</button>"+
                        "<button type='button' class='btn' data-toggle='modal' data-target='#ReviewModal2' onclick='setMovieCd("+movieCd+")'>후기	</button></p>");
        		out.println("</div></div></div>");
        	}
            
      out.write("\r\n");
      out.write("            </div>\r\n");
      out.write("            <ul class=\"pager\">\r\n");
      out.write("            \t");

            	if(1<=PAGE)
	        		out.println("<li class='previous'><a href='RecommendList.jsp?page="+(PAGE-1)+"'><span aria-hidden='true'>&larr;</span> Older</a></li>");
            	if(session.getAttribute("recommend_"+(PAGE+1)*6)!=null)
            		out.println("<li class='next'><a href='RecommendList.jsp?page="+(PAGE+1)+"'>Newer <span aria-hidden='true'>&rarr;</span></a></li>");
            	
      out.write(" \r\n");
      out.write("            </ul>\r\n");
      out.write("\r\n");
      out.write("        </div>\r\n");
      out.write("    </div><!-- 평점 -->\r\n");
      out.write("\t<div class=\"modal fade bs-example-modal-sm\" id=\"RateModal2\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\" aria-hidden=\"true\" >\r\n");
      out.write("\t  <div class=\"modal-dialog modal-sm\">\r\n");
      out.write("\t    <div class=\"modal-content\">\r\n");
      out.write("\t      <div class=\"modal-header\">\r\n");
      out.write("\t\t<button type=\"button\" class=\"close\" data-dismiss=\"modal\"><span aria-hidden=\"true\">×종료</span><span class=\"sr-only\">Close</span></button>\r\n");
      out.write("\t\t<h4 class=\"modal-title\" id=\"myModalLabel\">평점</h4>\r\n");
      out.write("\t      </div>\r\n");
      out.write("\t      <div class=\"modal-body\">\r\n");
      out.write("\t\t\t<input type=\"number\" id=RATE style=\"width: 30px\"> / 5.0\r\n");
      out.write("\t      </div>\r\n");
      out.write("\t      <div class=\"modal-footer\">\r\n");
      out.write("\t\t<a type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">종료</a>\r\n");
      out.write("\t\t<button onclick = 'Rating()'  type=\"button\" class=\"btn btn-primary\">저장</button>\r\n");
      out.write("\t      </div>\r\n");
      out.write("\t    </div>\r\n");
      out.write("\t  </div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t\r\n");
      out.write("\t<!-- 후기남기기 -->\r\n");
      out.write("\t<div class=\"modal fade\" id=\"ReviewModal2\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\" aria-hidden=\"true\" >\r\n");
      out.write("\t  <div class=\"modal-dialog\">\r\n");
      out.write("\t    <div class=\"modal-content\">\r\n");
      out.write("\t      <div class=\"modal-header\">\r\n");
      out.write("\t\t<button type=\"button\" class=\"close\" data-dismiss=\"modal\"><span aria-hidden=\"true\">×종료</span><span class=\"sr-only\">Close</span></button>\r\n");
      out.write("\t\t<h4 class=\"modal-title\" id=\"myModalLabel\">후기</h4>\r\n");
      out.write("\t      </div>\r\n");
      out.write("\t      <div class=\"modal-body\">\r\n");
      out.write("\t\t\t<textarea rows=\"5\" cols=\"70\" id=TEXT></textarea>\r\n");
      out.write("\t      </div>\r\n");
      out.write("\t      <div class=\"modal-footer\">\r\n");
      out.write("\t\t<a type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">종료</a>\r\n");
      out.write("\t\t<button onclick = 'Texting()'  type=\"button\" class=\"btn btn-primary\">저장</button>\r\n");
      out.write("\t      </div>\r\n");
      out.write("\t    </div>\r\n");
      out.write("\t  </div>\r\n");
      out.write("\t</div>\r\n");
      out.write("<script src=\"http://code.jquery.com/jquery-latest.min.js\"></script>\r\n");
      out.write("<script src=\"http://maxcdn.bootstrapcdn.com/bootstrap/3.2.0/js/bootstrap.min.js\"></script>\r\n");
      out.write("<script src=\"http://googledrive.com/host/0B-QKv6rUoIcGREtrRTljTlQ3OTg\"></script><!-- ie10-viewport-bug-workaround.js -->\r\n");
      out.write("<script src=\"http://googledrive.com/host/0B-QKv6rUoIcGeHd6VV9JczlHUjg\"></script><!-- holder.js -->\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
